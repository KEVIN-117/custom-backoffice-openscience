name: Deploy docker hub

on:
  push:
    branches:
      - '**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js and Yarn
        uses: actions/setup-node@v3
        with:
          node-version: '20.13.0'
          yarn-version: '1.22.21'
          cache: 'yarn'
          cache-dependency-path: '**/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Run lint
        run: yarn lint

      - name: Run lint:css
        run: yarn lint:css

      - name: Run test
        run: yarn test
        
      - name: Create build
        run: yarn build

      - name: Build Storybook for master branch
        if: github.ref == 'refs/heads/master'
        run: yarn build-storybook

      - name: Build Storybook for non-master branches
        if: github.ref != 'refs/heads/master'
        run: yarn build-storybook

      - name: Deploy to GitHub Pages for master branch
        if: github.ref == 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./storybook-static
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
      - name: Standardize branch name
        run: |
            BRANCH_NAME=${GITHUB_REF##*/}
            SANITIZED_BRANCH_NAME=$(echo "$BRANCH_NAME" | sed 's/[\/ ]/-/g')
            echo "Deployment path: branch-$SANITIZED_BRANCH_NAME"
            echo "##[set-output name=sanitized_branch;]branch-$SANITIZED_BRANCH_NAME"
        shell: bash
        id: branch_name

      - name: Deploy to GitHub Pages for other branches
        if: github.ref != 'refs/heads/master'
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./storybook-static
          destination_dir: '${{ steps.branch_name.outputs.sanitized_branch }}'
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
      - name: show deployment stoybook url
        if: github.ref != 'refs/heads/master'
        run: echo "https://ditmar.github.io/backoffice-openscience/${{ steps.branch_name.outputs.sanitized_branch }}"
      - name: Clean storybook folder
        run: rm -rf ./storybook-static
  cleanup:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true && github.event.pull_request.base.ref == 'master'
    steps:
      - name: Checkout gh-pages branch
        uses: actions/checkout@v3
        with:
          ref: gh-pages
      - name: Clean up Storybook for merged branch
        run: |
          BRANCH_NAME=${{ github.event.pull_request.head.ref }}
          git rm -r branch-${BRANCH_NAME}
          git commit -m "Cleanup: remove Storybook for merged branch ${BRANCH_NAME}"
          git push
